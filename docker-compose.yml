version: '3'

services:
  api-gateway:
    build:
      context: ./server/api-gateway
      dockerfile: Dockerfile
    image: api-gateway:1.0
    networks:
      - my_network
    ports:
      - "8081:8081"


  mid-saving:
    build:
      context: ./server/mid/mid_saving
      dockerfile: Dockerfile
    image: docker-mid-saving:1.0
    depends_on:
      - user-core
      - saving-core
    environment:
      - CONTAINER_USER_CORE_HOST=user-core
      - CONTAINER_SAVING_CORE_HOST=saving-core
    networks:
      - my_network

  user-core:
    build:
      context: ./server/core/user
      dockerfile: Dockerfile
    image: docker-core-user:1.0
    depends_on:
      - elasticsearch
    environment:
      - CONTAINER_ES_HOST=elasticsearch
    networks:
      - my_network

  saving-core:
    build:
      context: ./server/core/saving
      dockerfile: Dockerfile
    image: docker-core-saving:1.0
    depends_on:
      - elasticsearch
    environment:
      - CONTAINER_ES_HOST=elasticsearch
    networks:
      - my_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.1
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=datasearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.initial_master_nodes=elasticsearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      # for ubuntu:
      #- /home/nghia/Documents/ZTF/ESData:/usr/share/elasticsearch/data
      # old data (on MacBook):
      - esdata:/var/lib/docker/volumes/elasticsearch_esdata/_data
    networks:
      - my_network

#  saving-client console da duoc thay bang ReactJS frontend
#  saving-client:
#    build:
#      context: ./client
#      dockerfile: Dockerfile
#    image: docker-saving-client:1.0
#    environment:
#      - CONTAINER_MID_SAVING_HOST=mid-saving
#    networks:
#      - my_network
#    stdin_open: true
#    tty: true

#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#    ports:
#      - "2181:2181"
#    networks:
#      - my_network
#

#  kafka da doi sang he thong khac, su dung Kafka Cloud
#  kafka:
#    image: confluentinc/cp-kafka
#    container_name: kafka
#    depends_on:
#      - zookeeper
#    environment:
#      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
#      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
#    ports:
#      - "9092:9092"
#    networks:
#      - my_network

#  consumer_system:
#    build:
#      context: ./consumer_system
#      dockerfile: Dockerfile
#    image: docker-consumer-system:1.0
#    networks:
#      - my_network

  mysql:
    image: mysql
    container_name: mysql
    restart: always
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-data:/var/lib/mysql
    networks:
      - my_network

volumes:
  esdata:
    driver_opts:
      device: /Users/lap14122/Documents/ESLearn/elasticsearch/data
      o: bind
      type: bind

networks:
  my_network:
