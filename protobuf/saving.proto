// savings.proto
syntax = "proto3";

package protobuf;

message SavingAccount {
  // @gotags: es:"id"
  string id = 1;

  // @gotags: es:"user_id"
  string user_id = 2 [json_name = "user_id"];

  // @gotags: es:"balance"
  int64 balance = 3;

  string term_type = 4 [json_name = "term_type"];

  int32 term = 5;

  // @gotags: es:"term_in_days"
  int32 term_in_days = 6 [json_name = "term_in_days"];

  // @gotags: es:"created_date"
  string created_date = 7 [json_name = "created_date"];

  // @gotags: es:"due_date"
  string due_date = 8 [json_name = "due_date"];

  // @gotags: es:"rate"
  float rate = 9;

  // @gotags: es:"kyc"
  int32 kyc = 10;
}

message Filter {
  int32 kyc = 1;
  int32 term_in_days = 2 [json_name = "term_in_days"];
  string due_date_earliest = 3 [json_name = "due_date_earliest"];
  string due_date_latest = 4 [json_name = "due_date_latest"];
  int64 min_balance = 5 [json_name = "min_balance"];
  int32 page_size = 6 [json_name = "page_size"];
  int32 page_index = 7 [json_name = "page_index"];
}

message SavingAccountList{
  repeated SavingAccount acc_list = 1 [json_name = "acc_list"];
}

service SavingsService {
  rpc OpenSavingsAccount(SavingAccount) returns (SavingAccount);
  rpc AccountInquiry(AccountInquiryRequest) returns (SavingAccount);
  rpc UpdateBalance(WithdrawalRequest) returns (SavingAccount);
  rpc SearchAccountsByUserID(AccountInquiryRequest) returns (SavingAccountList);
  rpc SearchAccountsByFilter(Filter) returns (SavingAccountList);
}

message OpenSavingsAccountRequest {
  string user_id = 1 [json_name = "user_id"];
  string id_card_number = 2 [json_name = "id_card_number"];
  int64 balance = 3;
  string term_type = 4 [json_name = "term_type"];
  int32 term = 5;
  string created_date = 6 [json_name = "created_date"];
}

message OpenSavingsAccountResponse {
  bool success = 1;
  string user_id = 2 [json_name = "user_id"];
  string account_id = 3 [json_name = "account_id"];
  int64 balance = 4;
  float rate = 5;
  string created_date = 6 [json_name = "created_date"];
  string due_date = 7 [json_name = "due_date"];
  int64 expected_interest = 8 [json_name = "expected_interest"];
}

message WithdrawalRequest {
  string user_id = 1 [json_name = "user_id"];
  string account_id = 2 [json_name = "account_id"];
  int64 amount = 3;
  string date = 4;
}

message WithdrawalResponse {
  bool success = 1;
  SavingAccount acc = 2;
  int64 withdrawn_amount = 3 [json_name = "withdrawn_amount"];
}

message AccountInquiryRequest {

  string user_id = 1 [json_name = "user_id"];
  string account_id = 2 [json_name = "account_id"];
}

