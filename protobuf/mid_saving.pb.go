// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mid_saving.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("mid_saving.proto", fileDescriptor_262d7cf1cc6f51b8) }

var fileDescriptor_262d7cf1cc6f51b8 = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x8f, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x0f, 0x82, 0xc8, 0x50, 0xa5, 0xcc, 0x45, 0x88, 0xff, 0x0e, 0x7a, 0xce, 0x41, 0x9f,
	0x40, 0x7a, 0x28, 0x2a, 0x45, 0x69, 0x11, 0xf1, 0x54, 0xd2, 0x64, 0xac, 0x0b, 0xba, 0x9b, 0xcc,
	0xec, 0x46, 0x7c, 0x24, 0xdf, 0x52, 0x48, 0x76, 0xd9, 0x0d, 0x9a, 0x9e, 0x02, 0xdf, 0xef, 0xfb,
	0x7e, 0x99, 0x85, 0xe9, 0xa7, 0xaa, 0xd6, 0x52, 0xb4, 0x4a, 0x6f, 0xf3, 0x9a, 0x8d, 0x35, 0x78,
	0xd0, 0x7d, 0x36, 0xee, 0x2d, 0x03, 0x27, 0xc4, 0x7d, 0x9a, 0x4d, 0xd2, 0xce, 0xf5, 0xcf, 0x1e,
	0x4c, 0x17, 0xaa, 0x5a, 0x75, 0xd9, 0x8a, 0xb8, 0x55, 0x25, 0xe1, 0x02, 0x26, 0x4b, 0xda, 0x2a,
	0xb1, 0xc4, 0xcf, 0x42, 0x8c, 0x67, 0x79, 0x30, 0xe5, 0x69, 0xbe, 0xa4, 0xc6, 0x91, 0xd8, 0xec,
	0x7c, 0x0c, 0x4b, 0x6d, 0xb4, 0x10, 0x3e, 0xc1, 0xe1, 0x9c, 0xec, 0xcc, 0x31, 0x93, 0xb6, 0x0f,
	0xaf, 0x33, 0x4c, 0x06, 0x03, 0x10, 0x84, 0x17, 0xa3, 0xdc, 0x1b, 0xd7, 0x80, 0x8f, 0x35, 0xe9,
	0xfe, 0x6a, 0xb9, 0x2d, 0x4b, 0xe3, 0xb4, 0xc5, 0xcb, 0x38, 0xfb, 0x4b, 0x83, 0xfb, 0x6a, 0x77,
	0xc9, 0xff, 0x60, 0x0e, 0xf0, 0xa2, 0xec, 0x7b, 0xc5, 0xc5, 0x57, 0xf1, 0x81, 0x27, 0x71, 0x13,
	0xd3, 0x20, 0x3c, 0xfd, 0x1f, 0x7a, 0xd1, 0x3d, 0x1c, 0x79, 0xf7, 0x9d, 0x6e, 0x9c, 0xe2, 0x6f,
	0x4c, 0x1e, 0x37, 0x24, 0x41, 0x78, 0x1c, 0x0b, 0xfd, 0x75, 0xbe, 0xb6, 0xd9, 0xef, 0xf2, 0x9b,
	0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x02, 0xf4, 0x38, 0xbc, 0xea, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MidSavingServiceClient is the client API for MidSavingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MidSavingServiceClient interface {
	RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error)
	GetCurrentKYC(ctx context.Context, in *GetCurrentKYCRequest, opts ...grpc.CallOption) (*GetCurrentKYCResponse, error)
	OpenSavingsAccount(ctx context.Context, in *OpenSavingsAccountRequest, opts ...grpc.CallOption) (*OpenSavingsAccountResponse, error)
	Withdrawal(ctx context.Context, in *WithdrawalRequest, opts ...grpc.CallOption) (*WithdrawalResponse, error)
	AccountInquiry(ctx context.Context, in *AccountInquiryRequest, opts ...grpc.CallOption) (*SavingAccount, error)
}

type midSavingServiceClient struct {
	cc *grpc.ClientConn
}

func NewMidSavingServiceClient(cc *grpc.ClientConn) MidSavingServiceClient {
	return &midSavingServiceClient{cc}
}

func (c *midSavingServiceClient) RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error) {
	out := new(RegisterUserResponse)
	err := c.cc.Invoke(ctx, "/protobuf.MidSavingService/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *midSavingServiceClient) GetCurrentKYC(ctx context.Context, in *GetCurrentKYCRequest, opts ...grpc.CallOption) (*GetCurrentKYCResponse, error) {
	out := new(GetCurrentKYCResponse)
	err := c.cc.Invoke(ctx, "/protobuf.MidSavingService/GetCurrentKYC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *midSavingServiceClient) OpenSavingsAccount(ctx context.Context, in *OpenSavingsAccountRequest, opts ...grpc.CallOption) (*OpenSavingsAccountResponse, error) {
	out := new(OpenSavingsAccountResponse)
	err := c.cc.Invoke(ctx, "/protobuf.MidSavingService/OpenSavingsAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *midSavingServiceClient) Withdrawal(ctx context.Context, in *WithdrawalRequest, opts ...grpc.CallOption) (*WithdrawalResponse, error) {
	out := new(WithdrawalResponse)
	err := c.cc.Invoke(ctx, "/protobuf.MidSavingService/Withdrawal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *midSavingServiceClient) AccountInquiry(ctx context.Context, in *AccountInquiryRequest, opts ...grpc.CallOption) (*SavingAccount, error) {
	out := new(SavingAccount)
	err := c.cc.Invoke(ctx, "/protobuf.MidSavingService/AccountInquiry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MidSavingServiceServer is the server API for MidSavingService service.
type MidSavingServiceServer interface {
	RegisterUser(context.Context, *RegisterUserRequest) (*RegisterUserResponse, error)
	GetCurrentKYC(context.Context, *GetCurrentKYCRequest) (*GetCurrentKYCResponse, error)
	OpenSavingsAccount(context.Context, *OpenSavingsAccountRequest) (*OpenSavingsAccountResponse, error)
	Withdrawal(context.Context, *WithdrawalRequest) (*WithdrawalResponse, error)
	AccountInquiry(context.Context, *AccountInquiryRequest) (*SavingAccount, error)
}

// UnimplementedMidSavingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMidSavingServiceServer struct {
}

func (*UnimplementedMidSavingServiceServer) RegisterUser(ctx context.Context, req *RegisterUserRequest) (*RegisterUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterUser not implemented")
}
func (*UnimplementedMidSavingServiceServer) GetCurrentKYC(ctx context.Context, req *GetCurrentKYCRequest) (*GetCurrentKYCResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrentKYC not implemented")
}
func (*UnimplementedMidSavingServiceServer) OpenSavingsAccount(ctx context.Context, req *OpenSavingsAccountRequest) (*OpenSavingsAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenSavingsAccount not implemented")
}
func (*UnimplementedMidSavingServiceServer) Withdrawal(ctx context.Context, req *WithdrawalRequest) (*WithdrawalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Withdrawal not implemented")
}
func (*UnimplementedMidSavingServiceServer) AccountInquiry(ctx context.Context, req *AccountInquiryRequest) (*SavingAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountInquiry not implemented")
}

func RegisterMidSavingServiceServer(s *grpc.Server, srv MidSavingServiceServer) {
	s.RegisterService(&_MidSavingService_serviceDesc, srv)
}

func _MidSavingService_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MidSavingServiceServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.MidSavingService/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MidSavingServiceServer).RegisterUser(ctx, req.(*RegisterUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MidSavingService_GetCurrentKYC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCurrentKYCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MidSavingServiceServer).GetCurrentKYC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.MidSavingService/GetCurrentKYC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MidSavingServiceServer).GetCurrentKYC(ctx, req.(*GetCurrentKYCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MidSavingService_OpenSavingsAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenSavingsAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MidSavingServiceServer).OpenSavingsAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.MidSavingService/OpenSavingsAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MidSavingServiceServer).OpenSavingsAccount(ctx, req.(*OpenSavingsAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MidSavingService_Withdrawal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MidSavingServiceServer).Withdrawal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.MidSavingService/Withdrawal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MidSavingServiceServer).Withdrawal(ctx, req.(*WithdrawalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MidSavingService_AccountInquiry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountInquiryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MidSavingServiceServer).AccountInquiry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.MidSavingService/AccountInquiry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MidSavingServiceServer).AccountInquiry(ctx, req.(*AccountInquiryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MidSavingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.MidSavingService",
	HandlerType: (*MidSavingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _MidSavingService_RegisterUser_Handler,
		},
		{
			MethodName: "GetCurrentKYC",
			Handler:    _MidSavingService_GetCurrentKYC_Handler,
		},
		{
			MethodName: "OpenSavingsAccount",
			Handler:    _MidSavingService_OpenSavingsAccount_Handler,
		},
		{
			MethodName: "Withdrawal",
			Handler:    _MidSavingService_Withdrawal_Handler,
		},
		{
			MethodName: "AccountInquiry",
			Handler:    _MidSavingService_AccountInquiry_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mid_saving.proto",
}
